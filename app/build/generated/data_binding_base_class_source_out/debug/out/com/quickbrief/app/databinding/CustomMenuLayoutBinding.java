// Generated by view binder compiler. Do not edit!
package com.quickbrief.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.quickbrief.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomMenuLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout menuCategories;

  @NonNull
  public final LinearLayout menuLanguage;

  @NonNull
  public final LinearLayout menuLogout;

  @NonNull
  public final LinearLayout menuProfile;

  @NonNull
  public final View topShadow;

  private CustomMenuLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout menuCategories, @NonNull LinearLayout menuLanguage,
      @NonNull LinearLayout menuLogout, @NonNull LinearLayout menuProfile,
      @NonNull View topShadow) {
    this.rootView = rootView;
    this.menuCategories = menuCategories;
    this.menuLanguage = menuLanguage;
    this.menuLogout = menuLogout;
    this.menuProfile = menuProfile;
    this.topShadow = topShadow;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomMenuLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomMenuLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_menu_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomMenuLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.menu_categories;
      LinearLayout menuCategories = ViewBindings.findChildViewById(rootView, id);
      if (menuCategories == null) {
        break missingId;
      }

      id = R.id.menu_language;
      LinearLayout menuLanguage = ViewBindings.findChildViewById(rootView, id);
      if (menuLanguage == null) {
        break missingId;
      }

      id = R.id.menu_logout;
      LinearLayout menuLogout = ViewBindings.findChildViewById(rootView, id);
      if (menuLogout == null) {
        break missingId;
      }

      id = R.id.menu_profile;
      LinearLayout menuProfile = ViewBindings.findChildViewById(rootView, id);
      if (menuProfile == null) {
        break missingId;
      }

      id = R.id.top_shadow;
      View topShadow = ViewBindings.findChildViewById(rootView, id);
      if (topShadow == null) {
        break missingId;
      }

      return new CustomMenuLayoutBinding((LinearLayout) rootView, menuCategories, menuLanguage,
          menuLogout, menuProfile, topShadow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
